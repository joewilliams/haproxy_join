#! /usr/bin/ruby

## Copyright 2009, Joe Williams <joe@joetify.com>
##
## Permission is hereby granted, free of charge, to any person
## obtaining a copy of this software and associated documentation
## files (the "Software"), to deal in the Software without
## restriction, including without limitation the rights to use,
## copy, modify, merge, publish, distribute, sublicense, and/or sell
## copies of the Software, and to permit persons to whom the
## Software is furnished to do so, subject to the following
## conditions:
##
## The above copyright notice and this permission notice shall be
## included in all copies or substantial portions of the Software.
##
## THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
## EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES
## OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
## NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT
## HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,
## WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
## FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR
## OTHER DEALINGS IN THE SOFTWARE.

require 'find'
begin
  require 'ftools'
rescue LoadError
  # Not on a 1.8 vm. Try 1.9 fileutils
  require 'fileutils'
end

def write_main(haproxy_dir)
  global = File.new(
    File.join(haproxy_dir, "conf", "global.cfg"), "r"
  )

  defaults = File.new(
    File.join(haproxy_dir, "conf", "defaults.cfg"), "r"
  )

  frontend = File.new(
    File.join(haproxy_dir, "conf", "frontend.cfg"), "r"
  )

  @haproxy_config.write(global.read)
  @haproxy_config.write(defaults.read)
  @haproxy_config.write(frontend.read)

  global.close
  defaults.close
  frontend.close
end

def write_d(config_d)
  config_files = []

  # use .cfg as file extension for all configs
  extension = ".cfg"

  Find.find(config_d) do |file|
    if extension.include?(File.extname(file))
      config_files << file
    end
  end

  config_files.each do |file|
    @haproxy_config.write(
      File.new(File.join(file), "r").read
    )
  end
end

def main
  haproxy_filename = ARGV[0]
  haproxy_dir = ARGV[1]

  if ARGV.length != 2
    puts "haproxy_join usage: \n# haproxy_join RESULT_CONFIG CONFIG_DIR"
  else
    main_config = File.join(haproxy_dir, haproxy_filename)

    if File.exist?(main_config)
      begin
        File.copy(main_config, main_config + ".BAK-" + Time.now.strftime("%Y%m%d%H%M%S"))
      rescue NoMethodError
        File.copy(main_config, main_config + ".BAK-" + Time.now.strftime("%Y%m%d%H%M%S"))
      end
    end

    @haproxy_config = File.new(main_config, "w")

    write_main(haproxy_dir)

    write_d(
      File.join(haproxy_dir, "conf", "frontend.d")
    )
    write_d(
      File.join(haproxy_dir, "conf", "backend.d")
    )

    @haproxy_config.close
  end
end

main
